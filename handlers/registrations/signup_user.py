from aiogram import Router, types
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from decouple import config
from handlers.menu.menu import menu
from handlers.registrations.signup_bus import bus_registration
from db_handlers.create_db import Session, session
from db_handlers.models import User

# –ß–∏—Ç–∞–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–∞—Ä–æ–ª—å –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
correct_password = config('REGISTRATE_PASSWORD')
signup_router = Router()


# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π FSM
class SignUpUser(StatesGroup):
    password = State()
    name = State()


# –û–∂–∏–¥–∞–Ω–∏–µ –ø–∞—Ä–æ–ª—è
async def user_password_waiting(message: types.Message, state: FSMContext):
    await message.answer(
        "üîê<b>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å –≤–æ–¥–∏—Ç–µ–ª–µ–º '–£—Ä–∞–ª –±–∞—Ç—ã—Ä'.</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:"
    )
    await state.set_state(SignUpUser.password)


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è
@signup_router.message(SignUpUser.password)
async def handle_user_password(message: types.Message, state: FSMContext):
    if message.text == correct_password:
        await message.answer("‚úÖ <b>–ü–∞—Ä–æ–ª—å –≤–µ—Ä–Ω—ã–π!</b>\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤):")
        await state.set_state(SignUpUser.name)
    else:
        await message.answer("‚ùå <b>–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å.</b> –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–º–µ–Ω–∏
@signup_router.message(SignUpUser.name)
async def users_su(message: types.Message, state: FSMContext):
    if len(message.text.split()) != 2:
        await message.answer(
            '‚ùå<b>–§–∞–º–∏–ª–∏—è –∏–ª–∏ –∏–º—è –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–≤–µ—Ä–Ω–æ.</b> –ü—Ä–∏–º–µ—Ä –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: <b>–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤</b>'
        )
        return

    # –†–∞–∑–±–∏–≤–∞–µ–º –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é
    first_name, last_name = message.text.split()
    tg_id = message.from_user.id
    password = '1234'
    role = 'driver'

    new_user = User(
        tg_id=tg_id,
        username=f"{first_name}_{last_name}",  # –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è, –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
        password=password,
        role=role
    )

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–µ—Å—Å–∏—é –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    session.add(new_user)
    session.commit()

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await message.answer(
        f'üëã<b>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {first_name} {last_name}!</b>\n'
        f'–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –∫–∞–∫ <b>–≤–æ–¥–∏—Ç–µ–ª—å</b>. –í–∞—à –ø–∞—Ä–æ–ª—å: <b>{password}</b>'
    )

    # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∞–≤—Ç–æ–±—É—Å–∞
    await bus_registration(message, state)

